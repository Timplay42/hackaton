"""last

Revision ID: 8990211d89b6
Revises: 1665327ae084
Create Date: 2024-06-15 20:34:33.743288

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8990211d89b6'
down_revision: Union[str, None] = '1665327ae084'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('indifikator_log_users')
    op.drop_table('indifikator_log_users_secondary')
    op.drop_table('violation_log_users_secondary')
    op.drop_table('violation_log_users')
    op.drop_constraint('safety_machinery_file_id_fkey', 'safety_machinery', type_='foreignkey')
    op.drop_column('safety_machinery', 'file_id')
    op.drop_constraint('tools_file_id_fkey', 'tools', type_='foreignkey')
    op.drop_column('tools', 'file_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tools', sa.Column('file_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('tools_file_id_fkey', 'tools', 'files', ['file_id'], ['id'])
    op.add_column('safety_machinery', sa.Column('file_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('safety_machinery_file_id_fkey', 'safety_machinery', 'files', ['file_id'], ['id'])
    op.create_table('violation_log_users',
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('descritpion', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='violation_log_users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('violation_log_users_secondary',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('violation_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='violation_log_users_secondary_user_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['violation_id'], ['violation_log_users.id'], name='violation_log_users_secondary_violation_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='violation_log_users_secondary_pkey')
    )
    op.create_table('indifikator_log_users_secondary',
    sa.Column('indifikator_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('violation_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['indifikator_id'], ['indifikator_log_users.id'], name='indifikator_log_users_secondary_indifikator_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['violation_id'], ['violation_log_users.id'], name='indifikator_log_users_secondary_violation_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='indifikator_log_users_secondary_pkey')
    )
    op.create_table('indifikator_log_users',
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='indifikator_log_users_pkey')
    )
    # ### end Alembic commands ###
